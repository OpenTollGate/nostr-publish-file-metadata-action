# python/action.yml
name: 'NIP-94 Metadata Publisher (Python)'
description: 'Publishes NIP-94 file metadata events to Nostr using Python'
inputs:
  relays:
    description: 'Comma-separated list of Nostr relays'
    required: true
  url:
    description: 'URL to download the file'
    required: true
  mimeType:
    description: 'MIME type of the file'
    required: true
  fileHash:
    description: 'SHA-256 hash of the file'
    required: true
  originalHash:
    description: 'SHA-256 hash of the original file before any transformations'
    required: true
  input_nsec_hex:
    description: 'Nostr private key in hex format'
    required: true
  filename:
    description: 'Original filename of the file'
    required: false
  size:
    description: 'File size in bytes (optional)'
    required: false
  dimensions:
    description: 'Image/video dimensions in WxH format (optional)'
    required: false
  content:
    description: 'Description of the file content'
    required: false
  architecture:
    description: 'Architecture of the file (e.g., x86_64, arm64)'
    required: false
outputs:
  eventId:
    description: 'Raw Nostr event ID'
  noteId:
    description: 'Bech32-encoded note ID (note1...)'
runs:
  using: 'composite'
  steps:
    - name: Check if nsec_hex is empty
      shell: bash
      run: |
        if [ -z "${INPUT_NSEC_HEX}" ]; then
          echo "::error::nsec_hex is empty"
          exit 1
        fi

    # Skip pythons setup to save time when possible
    - name: Check Python version
      shell: bash
      run: |
        python_version=$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")' 2>/dev/null || echo "0.0")
        echo "Detected Python version: $python_version"
        if [[ "$python_version" != "3.12" ]]; then
          echo "Python version is not 3.12, setting up Python 3.12"
          echo "SETUP_PYTHON=true" >> $GITHUB_ENV
        else
          echo "Python version is 3.12, skipping setup"
          echo "SETUP_PYTHON=false" >> $GITHUB_ENV
        fi

    - name: Set up Python
      run: |
        echo "Using Python 3.12"
      if: env.SETUP_PYTHON == 'true'

    # skip nostr install if it is already available
    - name: Check if nostr is installed
      shell: bash
      run: |
        python3 -c "import nostr" 2>/dev/null && echo "NOSTR_INSTALLED=true" >> $GITHUB_ENV || echo "NOSTR_INSTALLED=false" >> $GITHUB_ENV

    - name: Install dependencies
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install nostr
      if: env.NOSTR_INSTALLED == 'false'

    - name: Run publisher
      shell: bash
      env:
        INPUT_RELAYS: ${{ inputs.relays }}
        INPUT_URL: ${{ inputs.url }}
        INPUT_MIMETYPE: ${{ inputs.mimeType }}
        INPUT_FILEHASH: ${{ inputs.fileHash }}
        INPUT_ORIGINALHASH: ${{ inputs.originalHash }}
        INPUT_NSEC_HEX: ${{ inputs.input_nsec_hex }}
        INPUT_FILENAME: ${{ inputs.filename }}
        INPUT_CONTENT: ${{ inputs.content }}
        INPUT_ARCHITECTURE: ${{ inputs.architecture }}
        INPUT_SIZE: ${{ inputs.size }}
        INPUT_DIMENSIONS: ${{ inputs.dimensions }}
        GITHUB_OUTPUT: ${{ github.output }}
      run: |
        touch "$GITHUB_OUTPUT"
        echo "Running publisher with outputs to: $GITHUB_OUTPUT"
        python3 ${{ github.action_path }}/publish_nip94.py

        EVENT_ID=$(grep '^eventId=' "$GITHUB_OUTPUT" | cut -d= -f2)
        NOTE_ID=$(grep '^noteId=' "$GITHUB_OUTPUT" | cut -d= -f2)
        echo "EVENT_ID=${EVENT_ID}" >> $GITHUB_ENV
        echo "NOTE_ID=${NOTE_ID}" >> $GITHUB_ENV

        echo "Contents of GITHUB_OUTPUT after publishing:"
        cat "$GITHUB_OUTPUT"
        echo "Contents of GITHUB_ENV after publishing:"
        cat "$GITHUB_ENV"