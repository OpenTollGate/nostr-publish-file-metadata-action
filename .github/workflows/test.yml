name: Test NIP-94 Publishing
on: [push, pull_request]
jobs:
  
  test-python-implementation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create test file
        run: |
          echo "Nostr file metadata test - $(date)" > testfile.txt
      
      - name: Upload to Blossom
        id: upload
        uses: c03rad0r/upload-blossom-action@using-nsec-argument
        with:
          host: ${{ secrets.HOST }}
          filePath: testfile.txt
          nostrPrivateKey: ${{ secrets.NSEC_HEX }}

      - name: Publish NIP-94 Metadata (Python)
        id: publish
        uses: ./
        with:
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"
          url: ${{ steps.upload.outputs.blossomUrl }}
          mimeType: "text/plain"
          fileHash: ${{ steps.upload.outputs.blossomHash }}
          originalHash: ${{ steps.upload.outputs.blossomHash }}
          filename: "testfile.txt"
          content: "This is a test file containing important data"
          customTags: >-
              customTag1=tag1
              customTag2=tag2

      - name: Debug Outputs
        run: |
          echo "Publish step outputs:"
          echo "  eventId: '${{ steps.publish.outputs.event_id }}'"

          echo "Upload step outputs:"
          echo "  blossomUrl: '${{ steps.upload.outputs.blossomUrl }}'"
          echo "  blossomHash: '${{ steps.upload.outputs.blossomHash }}'"
          echo "  size: '${{ steps.upload.outputs.size }}'"
          
          echo "===== Debug Publish Step ====="
          echo "Publish step status: ${{ steps.publish.outcome }}"
          echo "Publish step result: ${{ steps.publish.result }}"
          
          # Try to read from GITHUB_OUTPUT if it exists
          if [[ -f "$GITHUB_OUTPUT" ]]; then
            echo "Contents of GITHUB_OUTPUT:"
            echo "$GITHUB_OUTPUT"
          fi

          echo "File contents:"
          if [ -f event_id.txt ]; then
            cat event_id.txt
          fi

#      - name: Store Event ID in Environment
#        run: |
#          EVENT_ID=${{ steps.publish.outputs.eventId }}
#          echo "EVENT_ID=${EVENT_ID}" >> $GITHUB_ENV

      - name: Verify NIP-94 Event
        id: verify
        uses: ./python/verify
        continue-on-error: true
        with:
          eventId: ${{ env.EVENT_ID }}
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"

      - name: Retry Verification
        if: steps.verify.outcome == 'failure'
        uses: ./python/verify
        with:
          eventId: ${{ env.EVENT_ID }}
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"


      - name: Verification Summary
        shell: bash
        run: |
          echo "VERIFY value: ${{ env.VERIFY }}"
          if [[ "${{ env.VERIFY }}" == "true" ]]; then
            echo "✅ Event successfully verified on relays"
            exit 0
          else
            echo "❌ Event verification failed"
            exit 1
          fi
