name: Test NIP-94 Publishing
on: [push, pull_request]

jobs:
  test-javascript-nip94-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create test file
        run: echo "Nostr file metadata test - $(date)" > testfile.txt
      
      # Update working directory for JS implementation
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./js
        run: npm install

      - name: Build
        working-directory: ./js
        run: npm run build

      # Add step to make the script executable
      - name: Make script executable
        run: chmod +x js/dist/index.js
      
      - name: Upload to Blossom
        id: upload
        continue-on-error: true
        uses: c03rad0r/upload-blossom-action@using-nsec-argument
        with:
          host: ${{ secrets.HOST }}
          filePath: testfile.txt
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Upload to Blossom (Retry 1)
        id: upload-retry-1
        if: steps.upload.outcome == 'failure'
        continue-on-error: true
        uses: c03rad0r/upload-blossom-action@using-nsec-argument
        with:
          host: ${{ secrets.HOST }}
          filePath: testfile.txt
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Upload to Blossom (Final Attempt)
        id: upload-retry-2
        if: steps.upload-retry-1.outcome == 'failure'
        uses: c03rad0r/upload-blossom-action@using-nsec-argument
        with:
          host: ${{ secrets.HOST }}
          filePath: testfile.txt
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish NIP-94 Metadata
        id: publish
        uses: ./python
        with:
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"
          url: ${{ steps.upload.outputs.blossomUrl }}
          mimeType: "text/plain"
          fileHash: ${{ steps.upload.outputs.blossomHash }}
          originalHash: ${{ steps.upload.outputs.blossomHash }}
          content: "Test file uploaded via GitHub Actions (Python)"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload.outputs.size }}

      - name: Debug Outputs
        run: |
          echo "Publish step outputs:"
          echo "  eventId: '${{ steps.publish.outputs.eventId }}'"
          echo "  noteId: '${{ steps.publish.outputs.noteId }}'"
          echo "Upload step outputs:"
          echo "  blossomUrl: '${{ steps.upload.outputs.blossomUrl }}'"
          echo "  blossomHash: '${{ steps.upload.outputs.blossomHash }}'"
          echo "  size: '${{ steps.upload.outputs.size }}'"
          
          echo "===== Debug Publish Step ====="
          echo "Publish step status: ${{ steps.publish.outcome }}"
          echo "Publish step result: ${{ steps.publish.result }}"
          
          # Try to read from GITHUB_OUTPUT if it exists
          if [[ -f "$GITHUB_OUTPUT" ]]; then
            echo "Contents of GITHUB_OUTPUT:"
            cat "$GITHUB_OUTPUT"
          fi

          if [ -f event_id.txt ]; then
            cat event_id.txt
          fi

      - name: Store Event ID in Environment
        run: |
          EVENT_ID=${{ steps.publish.outputs.eventId }}
          echo "EVENT_ID=${EVENT_ID}" >> $GITHUB_ENV

      - name: Verify NIP-94 Event
        id: verify
        uses: ./python/verify
        continue-on-error: true
        with:
          eventId: ${{ steps.publish.outputs.eventId }}
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"

      - name: Retry Verification
        if: steps.verify.outcome == 'failure'
        uses: ./python/verify
        with:
          eventId: ${{ steps.publish.outputs.eventId }}
          relays: "wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/"

      - name: Verification Summary
        run: |
          if [[ "${{ steps.verify.outputs.found }}" == "true" ]]; then
            echo "✅ Event successfully verified on relays"
          else
            echo "❌ Event verification failed"
            exit 1
          fi
